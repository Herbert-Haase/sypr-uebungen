└── ❯ java Stringsort 200
Unsortiertes Array:
118 143 13 29 43 90 163 132 37 170 73 146 177 172 151 197 10 120 71 108 85 57 96 185 52 118 22 20 34 133 111 73 194 183 124 176 148 23 130 154 28 75 156 115
 16 117 111 99 111 68 121 118 1 67 111 155 30 123 170 130 15 148 29 103 99 47 38 59 175 95 62 73 150 165 111 190 8 179 25 153 98 16 16 35 130 186 182 152 15
6 114 49 67 126 129 48 80 5 73 191 178 170 134 29 77 189 131 134 61 148 88 2 142 32 105 169 125 148 82 57 187 82 199 53 98 156 176 68 0 124 106 148 17 113 1
44 113 113 158 80 157 198 0 178 93 68 45 19 70 122 179 128 67 177 180 158 140 69 12 118 188 172 4 181 127 108 63 130 78 121 5 33 145 76 105 29 160 103 188 3
3 141 92 117 95 17 62 30 194 26 167 19 158 189 56 145 128 174 63 96 175 66 138 
Sortiertes Array:
0* 1 10 103* 105* 106 108* 111**** 113** 114 115 117* 118*** 12 120 121* 122 123 124* 125 126 127 128* 129 13 130*** 131 132 133 134* 138 140 141 142 143 14
4 145* 146 148**** 15 150 151 152 153 154 155 156** 157 158** 16** 160 163 165 167 169 17* 170** 172* 174 175* 176* 177* 178* 179* 180 181 182 183 185 186 1
87 188* 189* 19* 190 191 194* 197 198 199 2 20 22 23 25 26 28 29*** 30* 32 33* 34 35 37 38 4 43 45 47 48 49 5* 52 53 56 57* 59 61 62* 63* 66 67** 68** 69 70
 71 73*** 75 76 77 78 8 80* 82* 85 88 90 92 93 95* 96* 98* 99*

 └── ❯ ./stringsort 200
Unsortierte Array:
88 136 109 156 177 73 164 153 198 125 20 96 45 65 156 192 22 198 27 79 187 100 180 63 120 163 124 183 58 11 0 99 99 109 55 28 182 172 182 132 97 154 29 94 1
72 185 38 194 135 18 25 122 118 5 138 38 121 62 173 179 25 173 78 76 34 86 105 16 10 39 101 107 193 130 154 165 67 192 111 2 10 136 77 128 142 15 118 63 29 
44 194 54 17 25 82 52 111 187 20 121 178 73 180 124 3 134 41 22 79 153 177 89 89 54 170 183 21 40 198 50 84 145 56 102 170 138 106 33 126 78 154 56 152 86 1
80 107 173 174 82 52 127 59 141 168 65 63 104 86 104 102 88 188 47 144 42 169 82 100 2 160 131 108 17 83 195 149 142 168 123 24 172 50 35 113 171 100 129 75
 138 185 129 26 125 129 170 168 98 5 20 53 165 103 161 182 186 108 132 81 28 55 
Sorted
0 10* 100** 101 102* 103 104* 105 106 107* 108* 109* 11 111* 113 118* 120 121* 122 123 124* 125* 126 127 128 129** 130 131 132* 134 135 136* 138** 141 142* 
144 145 149 15 152 153* 154** 156* 16 160 161 163 164 165* 168** 169 17* 170** 171 172** 173** 174 177* 178 179 18 180** 182** 183* 185* 186 187* 188 192* 1
93 194* 195 198** 2* 20** 21 22* 24 25** 26 27 28* 29* 3 33 34 35 38* 39 40 41 42 44 45 47 5* 50* 52* 53 54* 55* 56* 58 59 62 63** 65* 67 73* 75 76 77 78* 7
9* 81 82** 83 84 86** 88* 89* 94 96 97 98 99*

└── ❯ valgrind ./stringsort 200
==16583== Memcheck, a memory error detector
==16583== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==16583== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==16583== Command: ./stringsort 200
==16583== 
Unsortierte Array:
153 87 73 28 138 0 152 31 133 42 8 171 19 148 132 92 173 84 25 160 6 194 123 145 0 96 177 72 10 27 100 163 67 173 143 157 173 95 188 58 89 148 181 108 48 11
3 152 173 149 177 134 155 123 9 100 76 106 29 100 116 9 0 31 76 125 126 33 98 21 173 108 111 121 89 171 170 154 124 143 103 53 29 11 129 39 111 157 145 93 5
7 13 102 10 196 130 135 122 115 186 143 88 94 6 161 136 178 83 90 54 179 194 59 8 5 188 199 68 145 96 113 155 109 15 165 57 97 52 179 12 38 75 100 85 81 14 
21 11 97 111 17 76 57 77 37 14 65 36 83 163 133 196 118 194 164 35 52 13 87 183 26 78 58 78 163 92 92 136 55 142 199 73 170 57 102 7 23 119 196 106 82 81 55
 152 75 171 187 79 184 27 15 162 105 25 193 20 117 85 108 125 179 
Sorted
0** 10* 100*** 102* 103 105 106* 108** 109 11* 111** 113* 115 116 117 118 119 12 121 122 123* 124 125* 126 129 13* 130 132 133* 134 135 136* 138 14* 142 143
** 145** 148* 149 15* 152** 153 154 155* 157* 160 161 162 163** 164 165 17 170* 171** 173**** 177* 178 179** 181 183 184 186 187 188* 19 193 194** 196** 199
* 20 21* 23 25* 26 27* 28 29* 31* 33 35 36 37 38 39 42 48 5 52* 53 54 55* 57*** 58* 59 6* 65 67 68 7 72 73* 75* 76** 77 78* 79 8* 81* 82 83* 84 85* 87* 88 8
9* 9* 90 92** 93 94 95 96* 97* 98
==16583== 
==16583== HEAP SUMMARY:
==16583==     in use at exit: 0 bytes in 0 blocks
==16583==   total heap usage: 204 allocs, 204 frees, 4,409 bytes allocated
==16583== 
==16583== All heap blocks were freed -- no leaks are possible
==16583== 
==16583== For lists of detected and suppressed errors, rerun with: -s
==16583== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

└── ❯ make cppcheck
cppcheck --enable=warning,style --std=c11 --check-level=exhaustive stringsort.c
Checking stringsort.c ...




└── ❯ make TARGET=stringsort-optimiert      
gcc -g -Wall -Wextra -Werror -Wvla -std=c11 -pedantic    stringsort-optimiert.c   -o stringsort-optimiert
┌  sypr-uebungen/aufgabe3── main
└── ❯ make TARGET=stringsort-optimiert cppcheck
cppcheck --enable=warning,style --std=c11 --check-level=exhaustive stringsort-optimiert.c
Checking stringsort-optimiert.c ...
┌  sypr-uebungen/aufgabe3── main
└── ❯ ./stringsort-optimiert 200
Unsortierte Array:
 193   24   94   33   90   53   83   62  153   37  121   70  191    7  164  130  153   40   84  131  182  196   37   13  138  188  143   62   74   15   19  
 67   39   65   52   81  119   87  143   24   76   17   95   67   24   59  197  130   51   34   61  185   30   98  198  169   39  142   31  113  109    2  1
33  100   68  185  182  139   25   77  163  101   94   10  169   71   21  118    1   72  152   14   57  183   65   56  104  104  150  135   17   59   90  15
0  111  158   88   45   49  113  123   12  166  169  175  135   40  196   54  193   69  158    8  126  141   73  134   45  177   84  133  146   95   23   97
    7  133  137    4  182   50   79  146  168   49  121  104   41  118  110   35  139   68  195   65  162   68    0  159  197   36   92  143  132   67  192 
  91  152  129   95  134  131  127   33  100  176  154  156  169   24   18  156  163   38  151   29    0  171  181  112  120   17    4   16  101   24    8  
192  176  138   40   63   21  167   96  121   95   50   29   16 
Sorted
   0*   1   2   4*   7*   8*  10  12  13  14  15  16*  17**  18  19  21*  23  24****  25  29*  30  31  33*  34  35  36  37*  38  39*  40**  41  45*  49*  50
*  51  52  53  54  56  57  59*  61  62*  63  65**  67**  68**  69  70  71  72  73  74  76  77  79  81  83  84*  87  88  90*  91  92  94*  95***  96  97  98 
100* 101* 104** 109 110 111 112 113* 118* 119 120 121** 123 126 127 129 130* 131* 132 133** 134* 135* 137 138* 139* 141 142 143** 146* 150* 151 152* 153* 15
4 156* 158* 159 162 163* 164 166 167 168 169*** 171 175 176* 177 181 182** 183 185* 188 191 192* 193* 195 196* 197* 198

└── ❯ valgrind ./stringsort-optimiert 200
==15735== Memcheck, a memory error detector
==15735== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==15735== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==15735== Command: ./stringsort-optimiert 200
==15735== 
Unsortierte Array:
 113   21  172   63   15   15   75   14   34   77   39   58  154  112  181  139   52   26  182   15  154   42   95   29  194   46  118  195   92   54   72  
  6   27  196   21   42  163   96    8  197  125   47    7   80  111  189   19  164  167  154  179  122  148   27  103  142   25  173   90  117  179  162   
75    7  158   97    1  121  145   10   70   71   57   30  151  121   19  122   85  138   28   16   12  176  195  116   71   20   41  161   90  173   75  16
5  132  185   14  133  106  160   95  128  183  153  158   86   26  129    8   63   68  189   79   80  117   27  148  140   47  142  101   89  115  128   55
  199  113   21  132   19  133   28  100  116  133   58    2  111  188  163  174   56  104    5   88   21   32   37  162   32  179   15  121   46  144  128 
  45   57  150  129   29   35  109  129  152   42  139  106  105   79   69   79  135  125   85  176  147  117   13   61  149  144   28   23  190  172  151  
187  182   53  116   11   89   26   92   41   20   31   99  126 
Sorted
   1   2   5   6   7*   8*  10  11  12  13  14*  15***  16  19**  20*  21***  23  25  26**  27**  28**  29*  30  31  32*  34  35  37  39  41*  42**  45  46*
  47*  52  53  54  55  56  57*  58*  61  63*  68  69  70  71*  72  75**  77  79**  80*  85*  86  88  89*  90*  92*  95*  96  97  99 100 101 103 104 105 106*
 109 111* 112 113* 115 116** 117** 118 121** 122* 125* 126 128** 129** 132* 133** 135 138 139* 140 142* 144* 145 147 148* 149 150 151* 152 153 154** 158* 16
0 161 162* 163* 164 165 167 172* 173* 174 176* 179** 181 182* 183 185 187 188 189* 190 194 195* 196 197 199
==15735== 
==15735== HEAP SUMMARY:
==15735==     in use at exit: 0 bytes in 0 blocks
==15735==   total heap usage: 4 allocs, 4 frees, 3,029 bytes allocated
==15735== 
==15735== All heap blocks were freed -- no leaks are possible
==15735== 
==15735== For lists of detected and suppressed errors, rerun with: -s
==15735== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

└── ❯ time ./stringsort 20000 > /dev/null 
./stringsort 20000 > /dev/null  0,87s user 0,00s system 99% cpu 0,874 total
┌  sypr-uebungen/aufgabe3── main
└── ❯ time ./stringsort-optimiert 20000 > /dev/null 
./stringsort-optimiert 20000 > /dev/null  2,70s user 0,00s system 99% cpu 2,704 total

